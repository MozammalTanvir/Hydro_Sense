//Nasa api of weather making
class Autogenerated {
  String? time215;
  int? latitude;
  int? longitude;
  int? halfAngle;
  int? speed;
  String? type;
  bool? isMostAccurate;
  String? associatedCMEID;
  String? note;
  String? catalog;
  String? featureCode;
  String? dataLevel;
  String? measurementTechnique;
  String? imageType;
  Null? tilt;
  Null? minorHalfWidth;
  Null? speedMeasuredAtHeight;
  String? submissionTime;
  int? versionId;
  String? link;

  Autogenerated(
      {this.time215,
        this.latitude,
        this.longitude,
        this.halfAngle,
        this.speed,
        this.type,
        this.isMostAccurate,
        this.associatedCMEID,
        this.note,
        this.catalog,
        this.featureCode,
        this.dataLevel,
        this.measurementTechnique,
        this.imageType,
        this.tilt,
        this.minorHalfWidth,
        this.speedMeasuredAtHeight,
        this.submissionTime,
        this.versionId,
        this.link});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    time215 = json['time21_5'];
    latitude = json['latitude'];
    longitude = json['longitude'];
    halfAngle = json['halfAngle'];
    speed = json['speed'];
    type = json['type'];
    isMostAccurate = json['isMostAccurate'];
    associatedCMEID = json['associatedCMEID'];
    note = json['note'];
    catalog = json['catalog'];
    featureCode = json['featureCode'];
    dataLevel = json['dataLevel'];
    measurementTechnique = json['measurementTechnique'];
    imageType = json['imageType'];
    tilt = json['tilt'];
    minorHalfWidth = json['minorHalfWidth'];
    speedMeasuredAtHeight = json['speedMeasuredAtHeight'];
    submissionTime = json['submissionTime'];
    versionId = json['versionId'];
    link = json['link'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['time21_5'] = this.time215;
    data['latitude'] = this.latitude;
    data['longitude'] = this.longitude;
    data['halfAngle'] = this.halfAngle;
    data['speed'] = this.speed;
    data['type'] = this.type;
    data['isMostAccurate'] = this.isMostAccurate;
    data['associatedCMEID'] = this.associatedCMEID;
    data['note'] = this.note;
    data['catalog'] = this.catalog;
    data['featureCode'] = this.featureCode;
    data['dataLevel'] = this.dataLevel;
    data['measurementTechnique'] = this.measurementTechnique;
    data['imageType'] = this.imageType;
    data['tilt'] = this.tilt;
    data['minorHalfWidth'] = this.minorHalfWidth;
    data['speedMeasuredAtHeight'] = this.speedMeasuredAtHeight;
    data['submissionTime'] = this.submissionTime;
    data['versionId'] = this.versionId;
    data['link'] = this.link;
    return data;
  }
}
